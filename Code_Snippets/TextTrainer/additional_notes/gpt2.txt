#GPT2
def run_gpt2_unconstrained():
    import gpt_2_simple as gpt2
    gpt2.download_gpt2(model_name="124M")
    import tensorflow as tf
    tf.reset_default_graph()
    sess = gpt2.start_tf_sess()
    gpt2.finetune(sess,
                dataset=file_name,
                model_name='124M',
                steps=1000,
                restore_from='fresh',
                run_name='reframer',
                learning_rate=0.00001,
                print_every=10,
                sample_every=250,
                save_every=1000
                )
    #gpt2.copy_checkpoint_to_gdrive(run_name='reframer')
    #gpt2.copy_checkpoint_from_gdrive(run_name='reframer')
    #predict
    import tensorflow as tf
    tf.reset_default_graph()
    sess = gpt2.start_tf_sess()
    gpt2.load_gpt2(sess, run_name='reframer')

    with open(test_path, newline='') as data:
        annotations = csv.DictReader(data, delimiter=',', quotechar='"')
        annotations_list = list(annotations)
        for i in range(0,835):
            prefix = "<|startoftext|> " + annotations_list[i]['original_text'] + "\nreframed:"
            #reframed_text = annotations_list[i]['reframed_text']
            gen_file = 'gpt2_unconstrained/gpt2_gentext_{i}.txt'.format(i=i)
            gpt2.generate_to_file(sess,
                        run_name="reframer",
                        destination_path=gen_file,
                        length=50,
                        truncate="<|endoftext|>",
                        prefix=prefix,
                        include_prefix=False,
                        nsamples=1,
                        batch_size=1
                        )
